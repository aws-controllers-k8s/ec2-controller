---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: launchtemplateversions.ec2.services.k8s.aws
spec:
  group: ec2.services.k8s.aws
  names:
    kind: LaunchTemplateVersion
    listKind: LaunchTemplateVersionList
    plural: launchtemplateversions
    singular: launchtemplateversion
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.launchTemplateID
      name: LaunchTemplateID
      type: string
    - jsonPath: .status.versionNumber
      name: VersionNumber
      type: integer
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LaunchTemplateVersion is the Schema for the LaunchTemplateVersions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "LaunchTemplateVersionSpec defines the desired state of LaunchTemplateVersion.
              \n Describes a launch template version."
            properties:
              launchTemplateData:
                description: The information for the launch template.
                properties:
                  blockDeviceMappings:
                    items:
                      description: Describes a block device mapping.
                      properties:
                        deviceName:
                          type: string
                        ebs:
                          description: The parameters for a block device for an EBS
                            volume.
                          properties:
                            deleteOnTermination:
                              type: boolean
                            encrypted:
                              type: boolean
                            iops:
                              format: int64
                              type: integer
                            kmsKeyID:
                              type: string
                            snapshotID:
                              type: string
                            throughput:
                              format: int64
                              type: integer
                            volumeSize:
                              format: int64
                              type: integer
                            volumeType:
                              type: string
                          type: object
                        noDevice:
                          type: string
                        virtualName:
                          type: string
                      type: object
                    type: array
                  capacityReservationSpecification:
                    description: Describes an instance's Capacity Reservation targeting
                      option. You can specify only one option at a time. Use the CapacityReservationPreference
                      parameter to configure the instance to run in On-Demand capacity
                      or to run in any open Capacity Reservation that has matching
                      attributes (instance type, platform, Availability Zone). Use
                      the CapacityReservationTarget parameter to explicitly target
                      a specific Capacity Reservation or a Capacity Reservation group.
                    properties:
                      capacityReservationPreference:
                        type: string
                      capacityReservationTarget:
                        description: Describes a target Capacity Reservation or Capacity
                          Reservation group.
                        properties:
                          capacityReservationID:
                            type: string
                          capacityReservationResourceGroupARN:
                            type: string
                        type: object
                    type: object
                  cpuOptions:
                    description: The CPU options for the instance. Both the core count
                      and threads per core must be specified in the request.
                    properties:
                      coreCount:
                        format: int64
                        type: integer
                      threadsPerCore:
                        format: int64
                        type: integer
                    type: object
                  creditSpecification:
                    description: The credit option for CPU usage of a T instance.
                    properties:
                      cpuCredits:
                        type: string
                    type: object
                  disableAPIStop:
                    type: boolean
                  disableAPITermination:
                    type: boolean
                  ebsOptimized:
                    type: boolean
                  elasticGPUSpecifications:
                    items:
                      description: A specification for an Elastic Graphics accelerator.
                      properties:
                        type_:
                          type: string
                      type: object
                    type: array
                  elasticInferenceAccelerators:
                    items:
                      description: Describes an elastic inference accelerator.
                      properties:
                        count:
                          format: int64
                          type: integer
                        type_:
                          type: string
                      type: object
                    type: array
                  enclaveOptions:
                    description: Indicates whether the instance is enabled for Amazon
                      Web Services Nitro Enclaves. For more information, see What
                      is Amazon Web Services Nitro Enclaves? (https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html)
                      in the Amazon Web Services Nitro Enclaves User Guide.
                    properties:
                      enabled:
                        type: boolean
                    type: object
                  hibernationOptions:
                    description: Indicates whether the instance is configured for
                      hibernation. This parameter is valid only if the instance meets
                      the hibernation prerequisites (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-prerequisites.html).
                    properties:
                      configured:
                        type: boolean
                    type: object
                  iamInstanceProfile:
                    description: An IAM instance profile.
                    properties:
                      arn:
                        type: string
                      name:
                        type: string
                    type: object
                  imageID:
                    type: string
                  instanceInitiatedShutdownBehavior:
                    type: string
                  instanceMarketOptions:
                    description: The market (purchasing) option for the instances.
                    properties:
                      marketType:
                        type: string
                      spotOptions:
                        description: The options for Spot Instances.
                        properties:
                          blockDurationMinutes:
                            format: int64
                            type: integer
                          instanceInterruptionBehavior:
                            type: string
                          maxPrice:
                            type: string
                          spotInstanceType:
                            type: string
                          validUntil:
                            format: date-time
                            type: string
                        type: object
                    type: object
                  instanceRequirements:
                    description: "The attributes for the instance types. When you
                      specify instance attributes, Amazon EC2 will identify instance
                      types with these attributes. \n When you specify multiple parameters,
                      you get instance types that satisfy all of the specified parameters.
                      If you specify multiple values for a parameter, you get instance
                      types that satisfy any of the specified values. \n You must
                      specify VCpuCount and MemoryMiB. All other parameters are optional.
                      Any unspecified optional parameter is set to its default. \n
                      For more information, see Attribute-based instance type selection
                      for EC2 Fleet (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html),
                      Attribute-based instance type selection for Spot Fleet (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html),
                      and Spot placement score (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html)
                      in the Amazon EC2 User Guide."
                    properties:
                      acceleratorCount:
                        description: The minimum and maximum number of accelerators
                          (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on
                          an instance. To exclude accelerator-enabled instance types,
                          set Max to 0.
                        properties:
                          max:
                            format: int64
                            type: integer
                          min:
                            format: int64
                            type: integer
                        type: object
                      acceleratorManufacturers:
                        items:
                          type: string
                        type: array
                      acceleratorNames:
                        items:
                          type: string
                        type: array
                      acceleratorTotalMemoryMiB:
                        description: The minimum and maximum amount of total accelerator
                          memory, in MiB.
                        properties:
                          max:
                            format: int64
                            type: integer
                          min:
                            format: int64
                            type: integer
                        type: object
                      acceleratorTypes:
                        items:
                          type: string
                        type: array
                      bareMetal:
                        type: string
                      baselineEBSBandwidthMbps:
                        description: The minimum and maximum baseline bandwidth to
                          Amazon EBS, in Mbps. For more information, see Amazon EBS–optimized
                          instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html)
                          in the Amazon EC2 User Guide.
                        properties:
                          max:
                            format: int64
                            type: integer
                          min:
                            format: int64
                            type: integer
                        type: object
                      burstablePerformance:
                        type: string
                      cpuManufacturers:
                        items:
                          type: string
                        type: array
                      excludedInstanceTypes:
                        items:
                          type: string
                        type: array
                      instanceGenerations:
                        items:
                          type: string
                        type: array
                      localStorage:
                        type: string
                      localStorageTypes:
                        items:
                          type: string
                        type: array
                      memoryGiBPerVCPU:
                        description: The minimum and maximum amount of memory per
                          vCPU, in GiB.
                        properties:
                          max:
                            type: number
                          min:
                            type: number
                        type: object
                      memoryMiB:
                        description: The minimum and maximum amount of memory, in
                          MiB.
                        properties:
                          max:
                            format: int64
                            type: integer
                          min:
                            format: int64
                            type: integer
                        type: object
                      networkInterfaceCount:
                        description: The minimum and maximum number of network interfaces.
                        properties:
                          max:
                            format: int64
                            type: integer
                          min:
                            format: int64
                            type: integer
                        type: object
                      onDemandMaxPricePercentageOverLowestPrice:
                        format: int64
                        type: integer
                      requireHibernateSupport:
                        type: boolean
                      spotMaxPricePercentageOverLowestPrice:
                        format: int64
                        type: integer
                      totalLocalStorageGB:
                        description: The minimum and maximum amount of total local
                          storage, in GB.
                        properties:
                          max:
                            type: number
                          min:
                            type: number
                        type: object
                      vCPUCount:
                        description: The minimum and maximum number of vCPUs.
                        properties:
                          max:
                            format: int64
                            type: integer
                          min:
                            format: int64
                            type: integer
                        type: object
                    type: object
                  instanceType:
                    type: string
                  kernelID:
                    type: string
                  keyName:
                    type: string
                  licenseSpecifications:
                    items:
                      description: Describes a license configuration.
                      properties:
                        licenseConfigurationARN:
                          type: string
                      type: object
                    type: array
                  maintenanceOptions:
                    description: The maintenance options of your instance.
                    properties:
                      autoRecovery:
                        type: string
                    type: object
                  metadataOptions:
                    description: The metadata options for the instance. For more information,
                      see Instance metadata and user data (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)
                      in the Amazon Elastic Compute Cloud User Guide.
                    properties:
                      httpEndpoint:
                        type: string
                      httpProtocolIPv6:
                        type: string
                      httpPutResponseHopLimit:
                        format: int64
                        type: integer
                      httpTokens:
                        type: string
                      instanceMetadataTags:
                        type: string
                    type: object
                  monitoring:
                    description: Describes the monitoring for the instance.
                    properties:
                      enabled:
                        type: boolean
                    type: object
                  networkInterfaces:
                    items:
                      description: The parameters for a network interface.
                      properties:
                        associateCarrierIPAddress:
                          type: boolean
                        associatePublicIPAddress:
                          type: boolean
                        deleteOnTermination:
                          type: boolean
                        description:
                          type: string
                        deviceIndex:
                          format: int64
                          type: integer
                        groups:
                          items:
                            type: string
                          type: array
                        interfaceType:
                          type: string
                        ipv4PrefixCount:
                          format: int64
                          type: integer
                        ipv4Prefixes:
                          items:
                            description: Describes the IPv4 prefix option for a network
                              interface.
                            properties:
                              ipv4Prefix:
                                type: string
                            type: object
                          type: array
                        ipv6AddressCount:
                          format: int64
                          type: integer
                        ipv6Addresses:
                          items:
                            description: Describes an IPv6 address.
                            properties:
                              ipv6Address:
                                type: string
                            type: object
                          type: array
                        ipv6PrefixCount:
                          format: int64
                          type: integer
                        ipv6Prefixes:
                          items:
                            description: Describes the IPv4 prefix option for a network
                              interface.
                            properties:
                              ipv6Prefix:
                                type: string
                            type: object
                          type: array
                        networkCardIndex:
                          format: int64
                          type: integer
                        networkInterfaceID:
                          type: string
                        privateIPAddress:
                          type: string
                        privateIPAddresses:
                          items:
                            description: Describes a secondary private IPv4 address
                              for a network interface.
                            properties:
                              primary:
                                type: boolean
                              privateIPAddress:
                                type: string
                            type: object
                          type: array
                        secondaryPrivateIPAddressCount:
                          format: int64
                          type: integer
                        subnetID:
                          type: string
                      type: object
                    type: array
                  placement:
                    description: Describes the placement of an instance.
                    properties:
                      affinity:
                        type: string
                      availabilityZone:
                        type: string
                      groupName:
                        type: string
                      hostID:
                        type: string
                      hostResourceGroupARN:
                        type: string
                      partitionNumber:
                        format: int64
                        type: integer
                      spreadDomain:
                        type: string
                      tenancy:
                        type: string
                    type: object
                  privateDNSNameOptions:
                    description: Describes the options for instance hostnames.
                    properties:
                      enableResourceNameDNSAAAARecord:
                        type: boolean
                      enableResourceNameDNSARecord:
                        type: boolean
                      hostnameType:
                        type: string
                    type: object
                  ramDiskID:
                    type: string
                  securityGroupIDs:
                    items:
                      type: string
                    type: array
                  securityGroups:
                    items:
                      type: string
                    type: array
                  tagSpecifications:
                    items:
                      description: The tags specification for the resources that are
                        created during instance launch.
                      properties:
                        resourceType:
                          type: string
                        tags:
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  userData:
                    type: string
                type: object
              launchTemplateID:
                description: "The ID of the launch template. \n You must specify either
                  the LaunchTemplateId or the LaunchTemplateName, but not both."
                type: string
              launchTemplateName:
                description: "The name of the launch template. \n You must specify
                  the LaunchTemplateName or the LaunchTemplateId, but not both."
                type: string
              sourceVersion:
                description: The version number of the launch template version on
                  which to base the new version. The new version inherits the same
                  launch parameters as the source version, except for parameters that
                  you specify in LaunchTemplateData. Snapshots applied to the block
                  device mapping are ignored when creating a new version unless they
                  are explicitly included.
                type: string
              versionDescription:
                description: A description for the version of the launch template.
                type: string
            required:
            - launchTemplateData
            type: object
          status:
            description: LaunchTemplateVersionStatus defines the observed state of
              LaunchTemplateVersion
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createTime:
                description: The time the version was created.
                format: date-time
                type: string
              createdBy:
                description: The principal that created the version.
                type: string
              defaultVersion:
                description: Indicates whether the version is the default version.
                type: boolean
              versionNumber:
                description: The version number.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
